---
import type { AstroComponent } from "@lucide/astro";

interface ProjectProps {
  img: string;
  title: string;
  description: string;
  tags: string[];
  repo: string;
  web?: string;
  icon: AstroComponent;
}

const {
  img,
  title = "Titulo",
  description = "Descripcion del proyecto",
  tags = ["tag1", "tag2", "tag3"],
  repo = "",
  web = "",
} = Astro.props as ProjectProps;

const Icon = Astro.props.icon;
---

<section class="project">
  <div class="icon">
    <Icon size={64} />
  </div>
<div class="description">
  <div class="project__texts">
    <h3 class="project__title">{title}</h3>
    <p>{description}</p>
  </div>

  <div class="project__buttons">
    {
      web && (
        <a
          href={web}
          target="_blank"
          rel="noopener noreferrer"
          class="project__link"
          aria-label={"Ir sitio web del proyecto " + title}
        >
          Ver Sitio Web
        </a>
      )
    }
    <a
      href={repo}
      target="_blank"
      rel="noopener noreferrer"
      class="project__link"
      aria-label={"Ir repositorio del proyecto " + title}
    >
      Ver Repositorio
    </a>
  </div>
</div>
</section>


<style>
  .description {
    padding: 2rem;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.05) 0%,
      rgba(255, 255, 255, 0.02) 50%,
      rgba(255, 107, 53, 0.05) 100%
    );
    backdrop-filter: blur(10px);
    border-radius: 0 0 8px 8px;
    position: relative;
    overflow: hidden;
  }

  .description::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba(255, 107, 53, 0.3) 50%,
      transparent 100%
    );
  }
  .icon {
    display: flex;
    justify-content: center;
    align-items: center;
    background-image: linear-gradient(45deg, #1a1a1a, var(--border));
    height: 8rem;
  }
  .icon__emoji {
    font-size: 3rem;
  }
  .project {
    padding: 0px;
    text-align: left;
    transition: all 0.3s ease;
    border: 1px solid var(--border);
    transition: all 0.3s ease-out;
    border-radius: 8px;
    overflow: hidden;
    background: rgba(255, 255, 255, 0.02);
    backdrop-filter: blur(5px);
  }
  .project:hover {
    border: 1px solid var(--orange);
    transition: all 0.3s ease-in;
  }
  .project-dark:hover {
    background-color: var(--bg-hover-darktheme);
  }
  .project__link {
    color: var(--orange);
    font-weight: bold;
    display: block;
    margin-top: 1rem;
  }
  .project__buttons button {
    padding: 4px 24px;
    cursor: pointer;
  }

  .project-dark {
    color: var(--text-grey);
  }

  .project__title {
    margin: 1rem 0px;
    text-transform: uppercase;
    color: white;
  }
  .project__tags {
    margin: 1rem 0px;
    font-size: 0.9rem;
  }

  @media (min-width: 1080px) {
    .project {
      width: 32rem;
    }
  }
</style>
